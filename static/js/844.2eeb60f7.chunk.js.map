{"version":3,"file":"static/js/844.2eeb60f7.chunk.js","mappings":"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","sources":["api/Api.js","components/DefaultImg/DefaultImg.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9d4ece4211ac8e35ee810dac1072ece6';\n\nexport const fetchMoviesByQuery = async searchQuery => {\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  };\n  const searchParams = new URLSearchParams(params);\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?${searchParams.toString()}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const params = {\n    api_key: API_KEY,\n    media_type: 'movie',\n    time_window: 'week',\n    language: 'en-US',\n  };\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/${params.media_type}/${params.time_window}?api_key=${params.api_key}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import poster from '../../img/poster.jpeg';\n\nexport const DefaultImg = () => {\n  return <img src={poster} alt=\"No poster\" />;\n};\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { useCustomContext } from 'context/Context';\nimport { fetchMovieDetails } from 'api/Api';\nimport {\n  MovieThumb,\n  GoBackButton,\n  GenresItem,\n  GenresList,\n  StyledSpan,\n  MovieCard,\n  AddInfoLink,\n} from './MovieDetails.styled';\nimport { DefaultImg } from 'components/DefaultImg/DefaultImg';\nimport { Report } from 'notiflix';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const { setIsLoading } = useCustomContext();\n\n  const [movieData, setMovieData] = useState({});\n  const [genres, setGenres] = useState([]);\n  const [releaseDate, setReleaseDate] = useState('');\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovieData(data);\n        setGenres(data.genres);\n        setReleaseDate(data.release_date.slice(0, 4));\n      } catch (error) {\n        Report.info('An error occurred, try again later', `${error}`, 'Okay');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleClick = () => {\n    navigate(location.state.from);\n  };\n\n  return (\n    <>\n      <GoBackButton type=\"button\" onClick={handleClick}>\n        Go back\n      </GoBackButton>\n      <MovieCard>\n        {movieData.poster_path !== null ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movieData.poster_path}`}\n            alt={movieData.title}\n          />\n        ) : (\n          <DefaultImg />\n        )}\n        <div>\n          <h1>\n            {movieData.title}\n            {releaseDate !== '' && (\n              <StyledSpan>{`(${releaseDate})`}</StyledSpan>\n            )}\n          </h1>\n          <p>\n            <span>User score:</span>\n            <StyledSpan>{movieData.vote_average}</StyledSpan>\n          </p>\n          <h2>Overview</h2>\n          <p>{movieData.overview}</p>\n          {genres.length > 0 && (\n            <>\n              <h2>Genres</h2>\n              <GenresList>\n                {genres.map(genre => (\n                  <GenresItem key={genre.id}>{genre.name}</GenresItem>\n                ))}\n              </GenresList>\n            </>\n          )}\n        </div>\n      </MovieCard>\n      <MovieThumb>\n        <h2>Additional information</h2>\n        <ul>\n          <AddInfoLink>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </AddInfoLink>\n          <AddInfoLink>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </AddInfoLink>\n        </ul>\n      </MovieThumb>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  margin-bottom: 10px;\n  padding: 5px 10px;\n  background-color: #141e58;\n  color: #fff;\n  border-radius: 4px;\n  border-style: none;\n  opacity: 0.6;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const MovieCard = styled.div`\n  padding: 15px;\n  padding-bottom: 20px;\n  display: flex;\n  gap: 15px;\n  text-align: justify;\n  h1 {\n    text-align: left;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const GenresItem = styled.li`\n  padding: 10px;\n  background-color: #141e58;\n  color: #fff;\n  border-radius: 4px;\n  border: 1px solid;\n  opacity: 0.6;\n`;\n\nexport const StyledSpan = styled.span`\n  margin-left: 5px;\n  font-weight: bold;\n`;\n\nexport const MovieThumb = styled.div`\n  padding: 15px;\n  padding-bottom: 20px;\n  border-top: 1px solid #141e58;\n`;\n\nexport const AddInfoLink = styled.li`\n  margin-bottom: 5px;\n`;\n"],"names":["API_KEY","fetchMoviesByQuery","searchQuery","searchParams","URLSearchParams","api_key","query","language","page","include_adult","axios","toString","response","data","fetchTrendingMovies","params","media_type","time_window","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","DefaultImg","src","poster","alt","MovieDetails","useParams","setIsLoading","useCustomContext","useState","movieData","setMovieData","genres","setGenres","releaseDate","setReleaseDate","location","useLocation","navigate","useNavigate","useEffect","getMovieDetails","release_date","slice","Report","type","onClick","state","from","poster_path","title","vote_average","overview","length","map","genre","name","id","to","GoBackButton","styled","MovieCard","GenresList","GenresItem","StyledSpan","MovieThumb","AddInfoLink"],"sourceRoot":""}