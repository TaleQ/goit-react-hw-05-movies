{"version":3,"file":"static/js/961.02045747.chunk.js","mappings":"+PAEMA,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAS1BC,EAAe,IAAIC,gBARV,CACbC,QAASL,EACTM,MAAOJ,EACPK,SAAU,QACVC,KAAM,EACNC,eAAe,IANe,SAUTC,EAAAA,EAAAA,IAAA,oDAAuDP,EAAaQ,aAV3D,cAU1BC,EAV0B,yBAWzBA,EAASC,MAXgB,2CAAH,sDAclBC,EAAmB,mCAAG,6FAC3BC,EAAS,CACbV,QAASL,EACTgB,WAAY,QACZC,YAAa,QAJkB,SAMVP,EAAAA,EAAAA,IAAA,gDAAmDK,EAAOC,WAA1D,YAAwED,EAAOE,YAA/E,oBAAsGF,EAAOV,UANnG,cAM3BO,EAN2B,yBAO1BA,EAASC,MAPiB,2CAAH,qDAUnBK,EAAiB,mCAAG,WAAOC,GAAP,uFACRT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,oBAAmEnB,IAD3D,cACzBY,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qD,gFC1BjBO,EAAgBC,EAAAA,QAAAA,IAAH,oNAUbC,EAAUD,EAAAA,QAAAA,IAAH,sZ,SCVPE,EAAS,kBACpB,SAACH,EAAD,WACE,SAACE,EAAD,KAFkB,C,8KCITE,EAAe,WAC1B,IAAQL,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAoCO,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBP,GAAa,GADS,mBAGDV,EAAAA,EAAAA,IAAkBC,GAHjB,OAGdN,EAHc,OAIpBuB,QAAQC,IAAIxB,GACZkB,EAAalB,GACboB,EAAUpB,EAAKmB,QANK,kDAQpBI,QAAQC,IAAR,kEARoB,yBAUpBT,GAAa,GAVO,6EAAH,qDAarBO,GAED,GAAE,KAGD,gCACGR,IAAa,SAAC,IAAD,KACd,mBAAQW,KAAK,SAAb,sBACA,0BACE,gBACEC,IAAG,0CAAqCT,EAAUU,aAClDC,IAAKX,EAAUY,oBAGnB,4BACE,wBAAKZ,EAAUY,kBACf,0BACE,2CACA,0BAAOZ,EAAUa,mBAEnB,sCACA,uBAAIb,EAAUc,YACd,oCACA,wBACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,UAKrB,4BACE,oDACA,2BACE,yBAAI,SAAC,KAAD,CAASC,GAAG,OAAZ,qBAEJ,yBAAI,SAAC,KAAD,CAASA,GAAG,UAAZ,+BAMb,EAED,W","sources":["api/Api.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '9d4ece4211ac8e35ee810dac1072ece6';\n\nexport const fetchMoviesByQuery = async (searchQuery) => {\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n\n    };\n  const searchParams = new URLSearchParams(params);\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?${searchParams.toString()}`);\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const params = {\n    api_key: API_KEY,\n    media_type: 'movie',\n    time_window: 'week'\n  };\n  const response = await axios.get(`https://api.themoviedb.org/3/trending/${params.media_type}/${params.time_window}?api_key=${params.api_key}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n}","import styled from 'styled-components';\n\nexport const LoaderOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  background-color: rgba(0, 0, 0, 0.2);\n  transition: opacity 500ms linear, visibility 500ms linear;\n`;\n\nexport const Spinner = styled.div`\n  position: absolute;\n  top: calc(50% - 60px);\n  left: calc(50% - 60px);\n  width: 120px;\n  border: 16px solid #3f51b5;\n  border-top: 16px solid rgba(174, 175, 165, 1);\n  border-radius: 50%;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { LoaderOverlay, Spinner } from \"./Loader.styled\";\n\nexport const Loader = () => (\n  <LoaderOverlay>\n    <Spinner />\n  </LoaderOverlay>\n);\n\n\n// //React-loader-spinner\n// import { ColorRing } from 'react-loader-spinner';\n\n// export const Loader = () => (\n//   <ColorRing\n//     visible={true}\n//     height=\"80px\"\n//     width=\"80px\"\n//     ariaLabel=\"blocks-loading\"\n//     wrapperStyle={{\n//       position: \"fixed\",\n//       top: 0,\n//       width: \"100vw\",\n//       height: \"100vh\",\n//       overflowY: \"auto\",\n//       backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n//       transition: \"opacity 500ms linear, visibility 500ms linear\"}}\n//     wrapperClass=\"blocks-wrapper\"\n//     colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n//   />\n// );\n","import { useState, useEffect } from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport { useCustomContext } from 'context/Context';\nimport { fetchMovieDetails } from 'api/Api';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading } = useCustomContext();\n  const [movieData, setMovieData] = useState({});\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieDetails(movieId);\n        console.log(data);\n        setMovieData(data);\n        setGenres(data.genres);\n      } catch (error) {\n        console.log(`Oops, something went wrong. ${error}. Try again later.`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieDetails();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <button type=\"button\">Go back</button>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieData.poster_path}`}\n          alt={movieData.original_title}\n        ></img>\n      </div>\n      <div>\n        <h1>{movieData.original_title}</h1>\n        <p>\n          <span>User score:</span>\n          <span>{movieData.vote_average}</span>\n        </p>\n        <h2>Overview</h2>\n        <p>{movieData.overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map(genre => (\n            <li key={genre.id}>{genre.name}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li><NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li><NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchMoviesByQuery","searchQuery","searchParams","URLSearchParams","api_key","query","language","page","include_adult","axios","toString","response","data","fetchTrendingMovies","params","media_type","time_window","fetchMovieDetails","movieId","LoaderOverlay","styled","Spinner","Loader","MovieDetails","useParams","useCustomContext","isLoading","setIsLoading","useState","movieData","setMovieData","genres","setGenres","useEffect","getMovieDetails","console","log","type","src","poster_path","alt","original_title","vote_average","overview","map","genre","name","id","to"],"sourceRoot":""}