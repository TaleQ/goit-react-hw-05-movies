{"version":3,"file":"static/js/186.8aba1955.chunk.js","mappings":"mTAEMA,EAAU,mCAEHC,EAAkB,mCAAG,WAAOC,GAAP,gFAS1BC,EAAe,IAAIC,gBARV,CACbC,QAASL,EACTM,MAAOJ,EACPK,SAAU,QACVC,KAAM,EACNC,eAAe,IANe,SAUTC,EAAAA,EAAAA,IAAA,oDAAuDP,EAAaQ,aAV3D,cAU1BC,EAV0B,yBAWzBA,EAASC,MAXgB,2CAAH,sDAclBC,EAAmB,mCAAG,6FAC3BC,EAAS,CACbV,QAASL,EACTgB,WAAY,QACZC,YAAa,OACbV,SAAU,SALqB,SAOVG,EAAAA,EAAAA,IAAA,gDAAmDK,EAAOC,WAA1D,YAAwED,EAAOE,YAA/E,oBAAsGF,EAAOV,UAPnG,cAO3BO,EAP2B,yBAQ1BA,EAASC,MARiB,2CAAH,qDAWnBK,EAAiB,mCAAG,WAAOC,GAAP,uFACRT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,oBAAmEnB,IAD3D,cACzBY,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBO,EAAc,mCAAG,WAAOD,GAAP,uFACLT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,4BAA2EnB,IADtE,cACtBY,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdQ,EAAiB,mCAAG,WAAOF,GAAP,uFACRT,EAAAA,EAAAA,IAAA,6CAAgDS,EAAhD,4BAA2EnB,IADnE,cACzBY,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qD,kFCrCjBS,EAAgBC,EAAAA,QAAAA,IAAH,oNAUbC,EAAUD,EAAAA,QAAAA,IAAH,sZ,SCVPE,EAAS,kBACpB,SAACH,EAAD,WACE,SAACE,EAAD,KAFkB,C,yKCITE,EAAU,WACrB,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAoCS,EAAAA,EAAAA,KAA5BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aACnB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBL,GAAa,GADS,mBAGDT,EAAAA,EAAAA,IAAkBF,GAHjB,OAGdN,EAHc,OAIpBuB,QAAQC,IAAIxB,EAAKyB,SACjBL,EAAgBpB,EAAKyB,SALD,gDAOpBF,QAAQC,IAAR,kEAPoB,yBASpBP,GAAa,GATO,4EAAH,qDAYrBK,GAED,GAAE,KAGD,gCACGN,IAAa,SAAC,IAAD,KACd,wBACGG,EAAaO,KAAI,SAAAC,GAAM,OAAI,2BAAoB,0BAAG,uCAAoB,0BAAOA,EAAOC,aAAkB,uBAAID,EAAOE,YAA7EF,EAAOG,GAApB,QAI/B,EAED,W","sources":["api/Api.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '9d4ece4211ac8e35ee810dac1072ece6';\n\nexport const fetchMoviesByQuery = async (searchQuery) => {\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n\n    };\n  const searchParams = new URLSearchParams(params);\n  const response = await axios.get(`https://api.themoviedb.org/3/search/movie?${searchParams.toString()}`);\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const params = {\n    api_key: API_KEY,\n    media_type: 'movie',\n    time_window: 'week',\n    language: 'en-US'\n  };\n  const response = await axios.get(`https://api.themoviedb.org/3/trending/${params.media_type}/${params.time_window}?api_key=${params.api_key}`);\n  return response.data;\n};\n\nexport const fetchMovieDetails = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieReviews = async (movieId) => {\n  const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data;\n}","import styled from 'styled-components';\n\nexport const LoaderOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  background-color: rgba(0, 0, 0, 0.2);\n  transition: opacity 500ms linear, visibility 500ms linear;\n`;\n\nexport const Spinner = styled.div`\n  position: absolute;\n  top: calc(50% - 60px);\n  left: calc(50% - 60px);\n  width: 120px;\n  border: 16px solid #3f51b5;\n  border-top: 16px solid rgba(174, 175, 165, 1);\n  border-radius: 50%;\n  height: 120px;\n  animation: spin 2s linear infinite;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import { LoaderOverlay, Spinner } from \"./Loader.styled\";\n\nexport const Loader = () => (\n  <LoaderOverlay>\n    <Spinner />\n  </LoaderOverlay>\n);\n\n\n// //React-loader-spinner\n// import { ColorRing } from 'react-loader-spinner';\n\n// export const Loader = () => (\n//   <ColorRing\n//     visible={true}\n//     height=\"80px\"\n//     width=\"80px\"\n//     ariaLabel=\"blocks-loading\"\n//     wrapperStyle={{\n//       position: \"fixed\",\n//       top: 0,\n//       width: \"100vw\",\n//       height: \"100vh\",\n//       overflowY: \"auto\",\n//       backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n//       transition: \"opacity 500ms linear, visibility 500ms linear\"}}\n//     wrapperClass=\"blocks-wrapper\"\n//     colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n//   />\n// );\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useCustomContext } from \"context/Context\";\nimport { fetchMovieReviews } from \"api/Api\";\nimport { Loader } from \"components/Loader/Loader\";\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const { isLoading, setIsLoading } = useCustomContext();\n  const [movieReviews, setMovieReviews] = useState([])\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieReviews(movieId);\n        console.log(data.results);\n        setMovieReviews(data.results);\n      } catch (error) {\n        console.log(`Oops, something went wrong. ${error}. Try again later.`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {movieReviews.map(review => <li key={review.id}><p><span>Author:</span><span>{review.author}</span></p><p>{review.content}</p></li>)}\n      </ul>\n    </>\n  )\n};\n\nexport default Reviews;"],"names":["API_KEY","fetchMoviesByQuery","searchQuery","searchParams","URLSearchParams","api_key","query","language","page","include_adult","axios","toString","response","data","fetchTrendingMovies","params","media_type","time_window","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","LoaderOverlay","styled","Spinner","Loader","Reviews","useParams","useCustomContext","isLoading","setIsLoading","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","console","log","results","map","review","author","content","id"],"sourceRoot":""}