{"version":3,"file":"static/js/813.f59304e3.chunk.js","mappings":"mTAEMA,EAAU,mCAEHC,EAAkB,mCAAG,WAAMC,GAAN,gFAQ1BC,EAAe,IAAIC,gBAPV,CACbC,QAASL,EACTM,MAAOJ,EACPK,SAAU,QACVC,KAAM,EACNC,eAAe,IANe,SASTC,EAAAA,EAAAA,IAAA,oDACwBP,EAAaQ,aAV5B,cAS1BC,EAT0B,yBAYzBA,EAASC,MAZgB,2CAAH,sDAelBC,EAAmB,mCAAG,6FAC3BC,EAAS,CACbV,QAASL,EACTgB,WAAY,QACZC,YAAa,OACbV,SAAU,SALqB,SAOVG,EAAAA,EAAAA,IAAA,gDACoBK,EAAOC,WAD3B,YACyCD,EAAOE,YADhD,oBACuEF,EAAOV,UARpE,cAO3BO,EAP2B,yBAU1BA,EAASC,MAViB,2CAAH,qDAanBK,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,oBACoCnB,IAF5B,cACzBY,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBO,EAAc,mCAAG,WAAMD,GAAN,uFACLT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,4BAC4CnB,IAFvC,cACtBY,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdQ,EAAiB,mCAAG,WAAMF,GAAN,uFACRT,EAAAA,EAAAA,IAAA,6CACiBS,EADjB,4BAC4CnB,IAFpC,cACzBY,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD,oNC5CjBS,EAAWC,EAAAA,QAAAA,GAAH,iJASRC,EAAWD,EAAAA,QAAAA,GAAH,gMAURE,EAAiBF,EAAAA,QAAAA,IAAH,qF,mBCZdG,EAAO,WAClB,IAAQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACAS,GAAiBC,EAAAA,EAAAA,KAAjBD,aACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBN,GAAa,GADM,mBAGER,EAAAA,EAAAA,IAAeD,GAHjB,OAGXN,EAHW,OAIjBmB,EAAanB,EAAKsB,MAJD,gDAMjBC,EAAAA,OAAAA,QAAe,kBAAf,gBAA8C,QAN7B,yBAQjBR,GAAa,GARI,4EAAH,qDAWlBM,GAED,GAAE,KAGD,+BACE,SAAC,KAAD,WACE,SAACZ,EAAD,UACGS,EAAUM,KAAI,SAAAF,GAAI,OACjB,UAACX,EAAD,YACE,yBACyB,OAAtBW,EAAKG,cACJ,SAACb,EAAD,CAAgBc,I,6/UAAiBC,IAAI,MAErC,gBACED,IAAG,yCAAoCJ,EAAKG,cAC5CE,IAAI,QAIV,4BACE,uBAAIL,EAAKM,QACT,0BACE,0CACA,SAAC,KAAD,UAAaN,EAAKO,oBAfTP,EAAKQ,GADH,SAyB5B,EAED,G,6OC3DaC,EAAerB,EAAAA,QAAAA,OAAH,sNAYZsB,EAAYtB,EAAAA,QAAAA,IAAH,+JAWTuB,EAAavB,EAAAA,QAAAA,GAAH,4EAMVwB,EAAaxB,EAAAA,QAAAA,GAAH,sJASVyB,EAAazB,EAAAA,QAAAA,KAAH,mEAKV0B,EAAa1B,EAAAA,QAAAA,IAAH,qGAMV2B,EAAc3B,EAAAA,QAAAA,GAAH,8C","sources":["api/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9d4ece4211ac8e35ee810dac1072ece6';\n\nexport const fetchMoviesByQuery = async searchQuery => {\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  };\n  const searchParams = new URLSearchParams(params);\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?${searchParams.toString()}`\n  );\n  return response.data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const params = {\n    api_key: API_KEY,\n    media_type: 'movie',\n    time_window: 'week',\n    language: 'en-US',\n  };\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/${params.media_type}/${params.time_window}?api_key=${params.api_key}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 15px;\n  row-gap: 15px;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: 200px;\n  min-height: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  text-align: center;\n`;\n\nexport const DefaultCastImg = styled.img`\n  max-width: 200px;\n  height: 300px;\n  object-fit: cover;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useCustomContext } from 'context/Context';\nimport { fetchMovieCast } from 'api/Api';\nimport { Report } from 'notiflix';\nimport { CastList, CastItem, DefaultCastImg } from './Cast.styled';\nimport { StyledSpan, MovieThumb } from 'pages/MovieDetails/MovieDetails.styled';\nimport profileImg from '../../img/cast_img.png';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const { setIsLoading } = useCustomContext();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieCast(movieId);\n        setMovieCast(data.cast);\n      } catch (error) {\n        Report.failure('Try again later', `${error}`, 'Okay');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <MovieThumb>\n        <CastList>\n          {movieCast.map(cast => (\n            <CastItem key={cast.id}>\n              <div>\n                {cast.profile_path === null ? (\n                  <DefaultCastImg src={profileImg} alt=\"\" />\n                ) : (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n                    alt=\"\"\n                  />\n                )}\n              </div>\n              <div>\n                <p>{cast.name}</p>\n                <p>\n                  <span>Character:</span>\n                  <StyledSpan>{cast.character}</StyledSpan>\n                </p>\n              </div>\n            </CastItem>\n          ))}\n        </CastList>\n      </MovieThumb>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const GoBackButton = styled.button`\n  margin-bottom: 10px;\n  padding: 5px 10px;\n  background-color: #141e58;\n  color: #fff;\n  border-radius: 4px;\n  border-style: none;\n  opacity: 0.6;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const MovieCard = styled.div`\n  padding: 15px;\n  padding-bottom: 20px;\n  display: flex;\n  gap: 15px;\n  text-align: justify;\n  h1 {\n    text-align: left;\n  }\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const GenresItem = styled.li`\n  padding: 10px;\n  background-color: #141e58;\n  color: #fff;\n  border-radius: 4px;\n  border: 1px solid;\n  opacity: 0.6;\n`;\n\nexport const StyledSpan = styled.span`\n  margin-left: 5px;\n  font-weight: bold;\n`;\n\nexport const MovieThumb = styled.div`\n  padding: 15px;\n  padding-bottom: 20px;\n  border-top: 1px solid #141e58;\n`;\n\nexport const AddInfoLink = styled.li`\n  margin-bottom: 5px;\n`;\n"],"names":["API_KEY","fetchMoviesByQuery","searchQuery","searchParams","URLSearchParams","api_key","query","language","page","include_adult","axios","toString","response","data","fetchTrendingMovies","params","media_type","time_window","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","CastList","styled","CastItem","DefaultCastImg","Cast","useParams","setIsLoading","useCustomContext","useState","movieCast","setMovieCast","useEffect","getMovieCast","cast","Report","map","profile_path","src","alt","name","character","id","GoBackButton","MovieCard","GenresList","GenresItem","StyledSpan","MovieThumb","AddInfoLink"],"sourceRoot":""}